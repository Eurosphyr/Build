// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")
  name         String
  email        String   @unique
  passwordHash String
  role         Role     @default(USER)
  desactivated Boolean  @default(false)

  @@map("users")
}

model University {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  name        String
  location    String
  url         String
  description String
  rssFeed     RSSItem[]

  @@map("universities")
}

model RSSItem {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  link         String
  description  String?
  pubDate      DateTime?
  university   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
  Library      Library?    @relation(fields: [libraryId], references: [id])
  libraryId    String?     @db.ObjectId

  @@map("rss_items")
}

model Library {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  url     String
  rssFeed RSSItem[]

  @@map("libraries")
}
